server:
  port: 8080

apiKey: test123

spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      routes:
          - id: employee-service
            uri: lb://employee-service
            predicates:
              - Path=/api/v1/employees/**
            filters:
              - name: RequestRateLimiter
                args:
                  redis-rate-limiter.replenishRate: 10
                  redis-rate-limiter.burstCapacity: 20
                  redis-rate-limiter.requestedTokens: 1
              - KeyAuthFilter
          - id: book-service
            uri: lb://book-service
            predicates:
              - Path=/api/v1/books/**
            filters:
              - KeyAuthFilter
          - id: borrowing-service
            uri: lb://borrowing-service
            predicates:
              - Path=/api/v1/borrowing/**
            filters:
              - KeyAuthFilter
          - id: user-service
            uri: lb://user-service
            predicates:
              - Path=/api/v1/users/**
            filters:
              - KeyAuthFilter
      discovery:
        locator:
          enabled: true
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
      globalcors:
        cors-configurations:
          '[/**]':
            allowed-origins:
              - "*"
            allowed-methods:
              - "*"
            allowed-headers:
              - "*"
  data:
    redis:
      port: 6379
      host: localhost

eureka:
  instance:
    hostname: localhost
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
      register-with-eureka: true
      fetch-registry: true